// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using netcore_blueview.Models;

namespace netcore_blueview.Migrations
{
    [DbContext(typeof(DAO))]
    [Migration("20181027232151_AddedKey")]
    partial class AddedKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("netcore_blueview.Models.CrimeReport", b =>
                {
                    b.Property<int>("CrimeReportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AudioUrl");

                    b.Property<string>("CrimeCode");

                    b.Property<string>("Location");

                    b.Property<DateTime>("StartTime");

                    b.Property<string>("Transcript");

                    b.HasKey("CrimeReportId");

                    b.ToTable("CrimeReports");
                });

            modelBuilder.Entity("netcore_blueview.Models.SpeechRecognition", b =>
                {
                    b.Property<int>("SpeechRecognitionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AudioUrl");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("SpeechRecognitionId");

                    b.ToTable("SpeechRecognitions");
                });

            modelBuilder.Entity("netcore_blueview.Models.SpeechRecognitionAlternative", b =>
                {
                    b.Property<int>("SpeechRecognitionAlternativeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SpeechRecognitionId");

                    b.Property<string>("Transcript");

                    b.HasKey("SpeechRecognitionAlternativeId");

                    b.HasIndex("SpeechRecognitionId");

                    b.ToTable("SpeechRecognitionAlternatives");
                });

            modelBuilder.Entity("netcore_blueview.Models.WordInfo", b =>
                {
                    b.Property<int>("WordInfoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SpeechRecognitionAlternativeId");

                    b.HasKey("WordInfoId");

                    b.HasIndex("SpeechRecognitionAlternativeId");

                    b.ToTable("WordInfos");
                });

            modelBuilder.Entity("netcore_blueview.Models.SpeechRecognitionAlternative", b =>
                {
                    b.HasOne("netcore_blueview.Models.SpeechRecognition", "SpeechRecognition")
                        .WithMany("SpeechRecognitionAlternatives")
                        .HasForeignKey("SpeechRecognitionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("netcore_blueview.Models.WordInfo", b =>
                {
                    b.HasOne("netcore_blueview.Models.SpeechRecognitionAlternative", "SpeechRecognitionAlternative")
                        .WithMany("WordInfos")
                        .HasForeignKey("SpeechRecognitionAlternativeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
